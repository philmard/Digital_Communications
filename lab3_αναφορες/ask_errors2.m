function errors=ask_errors2(k,M,nsamp,EbNo)
% Η συνάρτηση αυτή εξομοιώνει την παραγωγή και αποκωδικοποίηση
% θορυβώδους σήματος L-ASK και μετρά τον αριθμό των εσφαλμένων συμβόλων.
% Υπολογίζει επίσης τη θεωρητική πιθανότητα εσφαλμένου συμβόλου, Pe.
% Επιστρέφει τον αριθμό των εσφαλμένων συμβόλων, καθώς και τον συνολικό
% αριθμό των συμβόλων που παρήχθησαν.
% k είναι ο αριθμός των bits/σύμβολο, ώστε L=2^k,
% M ο αριθμός των παραγόμενων συμβόλων (μήκος ακολουθίας L-ASK)
% nsamp ο αριθμός των δειγμάτων ανά σύμβολο (oversampling ratio)
% EbNo είναι ο λόγος Eb/No, σε db
L=2^k;
SNR=EbNo-10*log10(nsamp/2/k); % SNR ανά δείγμα σήματος
% Διάνυσμα τυχαίων ακεραίων {±1, ±3, ... ±(L-1)}. Να επαληθευτεί
x=2*floor(L*rand(1,M))-L+1;
Px=(L^2-1)/3 % θεωρητική ισχύς σήματος
Pmetr=sum(x.^2)/length(x) % μετρούμενη ισχύς σήματος (για επαλήθευση)
%h=ones(1,nsamp); h=h/sqrt(h*h'); % κρουστική απόκριση φίλτρου
 % πομπού (ορθογωνικός παλμός μοναδιαίας ενέργειας)
h=cos(2*pi*(1:nsamp)/nsamp); h=h/sqrt(h*h'); % για μερος 3 ερωτημα (γ)
%stem(h); % για μερος 3 ερωτημα (γ)
y=upsample(x,nsamp); % μετατροπή στο πυκνό πλέγμα
y=conv(y,h); % το προς εκπομπή σήμα
y=y(1:M*nsamp); % περικόπτεται η ουρά που αφήνει η συνέλιξη
% xwris pros8hkh 8oruvou(3b): --------------------------
%figure; stem(x(1:20)); % για μερος 3 ερωτημα (β)
%figure; stem(y(1:20*nsamp)); % για μερος 3 ερωτημα (β)
%***
%ynoisy=y;
%-------------------------------------------------------
ynoisy=awgn(y,SNR,'measured'); % θορυβώδες σήμα1
matched=h; % erwthma 3 (γ)
%for i=1:nsamp matched(i)=h(end-i+1); end
yrx=conv(ynoisy,matched);
%figure; stem(yrx(1:20*nsamp)); % για μερος 3 ερωτημα (β)%***
z = yrx(nsamp:nsamp:M*nsamp); % Yποδειγμάτιση -- στο τέλος
%figure; stem(z(1:20)); % diko mou
 % κάθε περιόδου Τ
l=[-L+1:2:L-1];
for i=1:length(z)
[m,j]=min(abs(l-z(i)));
z(i)=l(j);
end
err=not(x==z);
errors=sum(err);

end